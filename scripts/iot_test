#!/usr/bin/python
"""
Copyright (c) 2015, Answer17.  All rights reserved.
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this
  list of conditions and the following disclaimer.

* Redistributions in binary form must reproduce the above copyright notice,
  this list of conditions and the following disclaimer in the documentation
  and/or other materials provided with the distribution.

* Neither the name of iot_bridge nor the names of its
  contributors may be used to endorse or promote products derived from
  this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
"""

"""
iot_test - Sends a command from ROS to Openhab, via the iot_bridge.
Usage:  iot_test item_name  Value
"""
import rospy, sys
from diagnostic_msgs.msg import KeyValue
from time import sleep

rospy.init_node('iot_test', anonymous=True)

# Publish a value to iot to send a command to a device -e.g. turn heat on
pub = rospy.Publisher('iot_command', KeyValue, queue_size=10)
sleep(1)
# alternatively, publish a value to iot to set the state of a device - e.g. heat is on
# pub = rospy.Publisher('openhab_set', KeyValue, queue_size=10)

# First value must match name of item in openhab .items file
# Second value must be a valid setting for the item.  
# pub.publish("Heating_GF_Corridor", "ON")
try:
    print "Set " + sys.argv[1] + " to " + sys.argv[2]
    pub.publish(sys.argv[1], sys.argv[2])
    #pub.publish(sys.argv[1], sys.argv[2])
except Exception as err:
    print err
    print "Usage:  iot_test item_name  Value"

sleep(1)    # Give time for command to be published
